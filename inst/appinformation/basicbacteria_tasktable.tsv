"QuizID"	"AppID"	"AppTitle"	"TaskID"	"TaskText"	"RecordID"	"Record"	"Type"	"Note"
"DSAIRM_basicbacteria"	"basicbacteria"	"Basic Bacteria Model"	1	"Start with 100 initial bacteria and an initial level of 1 for the immune response. Assume bacteria grow at a rate of 1 per day (i.e., g = 1), the carrying capacity is 10^5^ and they live for about 2 days (remember that the inverse of the lifespan is the rate of death). Assume the immune response is activated and grows at a rate of 10^-4^, kills bacteria at a rate of 10^-4^ and decays at a rate of 2 per day. Set simulation start time to 0 and final time of 100 (which we assume to be days). Set the time step to 0.01. As you'll see, if we run an ODE model, the time step is only relevant for plotting, not for the underlying model simulation (while this is not the case for the discrete time model). Only run the continuous time ODE model. Plot both x- and y-axes on a linear scale (i.e, no log scales for now). You can stick with ggplot as the plot engine. Run the simulation, see what you get. You should see some oscillations and then the system settles down, with bacteria and immune response at the end of the simulation at around 19996 and 3003, respectively. Change the time step to 0.05, re-run the simulation. Record the number of bacteria at the end of the simulation (Hint: not much changes)."	"T1R1"	"Number of bacteria at end of simulation, _dt_=0.05"	"Rounded_Integer"	"Report the rounded integer"
"DSAIRM_basicbacteria"	"basicbacteria"	"Basic Bacteria Model"	2	"Play around with the plot settings. Switch the plotting to have x-axis, y-axis or both plotted on a log scale. Also try plotly as the plot engine. Leave all other settings as before. You should see that while the look of the plot changes, the underlying numbers do not. This is something to be aware of when you see plots in papers or produce your own. The best plot to use is the one that shows results of interest in the clearest form. Usually, the x-axis is linear and the y-axis is either linear or logarithmic. One nice feature about plotly is that the plot is interactive and you can read off numbers. Use this feature to determine the day at which the bacteria and immune response have their second peak. (*Hint: day 32 for bacteria, a bit later for the immune response.*)"	"T2R1"	"Day of second peak for the immune response"	"Rounded_Integer"	"Report the rounded integer"
"DSAIRM_basicbacteria"	"basicbacteria"	"Basic Bacteria Model"	3	"Go back to both linear scales for plotting. Keep all variable and parameter settings as before. Set _Models to run_ to _both_. This runs and shows both the continuous-time and discrete-time models. Start with a time step of 0.01. Run the simulation. You should see the results from the 2 models essentially on top of each other and barely distinguishable. You should see that the maximum number of bacteria is 49,513 for the ODE model, and very close for the discrete-time model."	"T3R1"	"Maximum number of bacteria for the discrete-time model"	"Rounded_Integer"	"Report the rounded integer"
"DSAIRM_basicbacteria"	"basicbacteria"	"Basic Bacteria Model"	4	"Now try different values for the time step, _dt_. Leave all other settings as before. You should notice that as _dt_ gets larger, the continuous-time model results remain the same, but the discrete-time models change and start moving away from those of the continous-time model. At a time step above 0.1, the results start to look very different. Somewhere above a time step of 0.5, it becomes so large that for these parameter settings, the simulation 'crashes' and you get an error message."	"T4R1"	"Final value for **B**, continous model, _dt_=0.1"	"Rounded_Integer"	"Report the rounded integer"
"DSAIRM_basicbacteria"	"basicbacteria"	"Basic Bacteria Model"	4	"Now try different values for the time step, _dt_. Leave all other settings as before. You should notice that as _dt_ gets larger, the continuous-time model results remain the same, but the discrete-time models change and start moving away from those of the continous-time model. At a time step above 0.1, the results start to look very different. Somewhere above a time step of 0.5, it becomes so large that for these parameter settings, the simulation 'crashes' and you get an error message."	"T4R1"	"Final value for **B**, discrete-time model, _dt_=0.1"	"Rounded_Integer"	"Report the rounded integer"
"DSAIRM_basicbacteria"	"basicbacteria"	"Basic Bacteria Model"	5	"Now we'll explore how model parameters impact outcomes. Set _dt_ to 0.01, change the simulation time, *tfinal*, to 200 days. Also change the bacteria growth rate from 1 to 2 per day. Leave all other settings as before (you can keep running the discrete model, or switch back to ODE only). Run the simulation. Switch back and forth between growth rates of 1 and 2 and examine how bacteria and immune response dynamics change. Then, also try a growth rate of 3."	"T5R1"	"Final value for **B**, continous model, *g* = 2"	"Rounded_Integer"	"Report the rounded integer"
"DSAIRM_basicbacteria"	"basicbacteria"	"Basic Bacteria Model"	5	"Now we'll explore how model parameters impact outcomes. Set _dt_ to 0.01, change the simulation time, *tfinal*, to 200 days. Also change the bacteria growth rate from 1 to 2 per day. Leave all other settings as before (you can keep running the discrete model, or switch back to ODE only). Run the simulation. Switch back and forth between growth rates of 1 and 2 and examine how bacteria and immune response dynamics change. Then, also try a growth rate of 3."	"T5R2"	"Final value for **B**, continous model, *g* = 3"	"Rounded_Integer"	"Report the rounded integer"
"DSAIRM_basicbacteria"	"basicbacteria"	"Basic Bacteria Model"	6	"In the previous task, you might have been surprised to find that the bacteria growth rate has no impact on the number of bacteria at the final, steady state. This is an indication that even a simple 2-variable model can lead to interesting, and maybe non-intuitive results. 


For a model as simple as the one we have here, one can mathematically compute the steady state, i.e., the state at which bacteria and immune response don't change further. To do so, realize that _no change_ means both left hand sides of the ODE model are zero. Equivalently, for the discrete time model, it means $B_{t+dt} = B_t$ and the same for **I**. We'll focus on the ODE model here. With the right side of the equations being zero, the model turns into just 2 algebraic equations, namely $0= g B (1-B/B_{max}) - d_B B - k BI$ and $0 = r B I - d_I I$. You can now solve this such that you end up with two equations of the form $B = XX$ and $I = YY$ where *XX* and *YY* are some combinations of model parameters. Let's do that for the second equation. 


We rewrite the equation as $r B I = d_I I$, then divide by **I** and *r* to arrive at $B = d_I/r$. This shows that indeed, the number of bacteria at the steady state does not depend on the growth rate *g*. I'll let you do the same for the first equation to get **I** at steady state (note that at some poin in the solving process, you'll have to insert the steady state value of **B** we just found into the equation). You should end up with $I = (r B_{max} (g-d_B) - d_I g)/(k r B_{max})$. Based on this, we expect that doubling *d~I~* will lead to an increase (doubling) in $B$ at steady state, and a decrease in **I**. Let's test that. 


Set everything back as in task 1 (you can use the _Reset Inputs_ button), but increase the simulation time to 200 days (to ensure we reach steady state). Run the model. Record **B** and **I** at the end. Then set $d_I=3$, run again, and again record values for **B** and **I**. Do it again for $d_I=4$."	"T6R1"	"Final value for **B**, continous model, _d~I~_ = 2"	"Rounded_Integer"	"Report the rounded integer"
"DSAIRM_basicbacteria"	"basicbacteria"	"Basic Bacteria Model"	6	"In the previous task, you might have been surprised to find that the bacteria growth rate has no impact on the number of bacteria at the final, steady state. This is an indication that even a simple 2-variable model can lead to interesting, and maybe non-intuitive results. 


For a model as simple as the one we have here, one can mathematically compute the steady state, i.e., the state at which bacteria and immune response don't change further. To do so, realize that _no change_ means both left hand sides of the ODE model are zero. Equivalently, for the discrete time model, it means $B_{t+dt} = B_t$ and the same for **I**. We'll focus on the ODE model here. With the right side of the equations being zero, the model turns into just 2 algebraic equations, namely $0= g B (1-B/B_{max}) - d_B B - k BI$ and $0 = r B I - d_I I$. You can now solve this such that you end up with two equations of the form $B = XX$ and $I = YY$ where *XX* and *YY* are some combinations of model parameters. Let's do that for the second equation. 


We rewrite the equation as $r B I = d_I I$, then divide by **I** and *r* to arrive at $B = d_I/r$. This shows that indeed, the number of bacteria at the steady state does not depend on the growth rate *g*. I'll let you do the same for the first equation to get **I** at steady state (note that at some poin in the solving process, you'll have to insert the steady state value of **B** we just found into the equation). You should end up with $I = (r B_{max} (g-d_B) - d_I g)/(k r B_{max})$. Based on this, we expect that doubling *d~I~* will lead to an increase (doubling) in $B$ at steady state, and a decrease in **I**. Let's test that. 


Set everything back as in task 1 (you can use the _Reset Inputs_ button), but increase the simulation time to 200 days (to ensure we reach steady state). Run the model. Record **B** and **I** at the end. Then set $d_I=3$, run again, and again record values for **B** and **I**. Do it again for $d_I=4$."	"T6R2"	"Final value for **B**, continous model, _d~I~_ = 3"	"Rounded_Integer"	"Report the rounded integer"
"DSAIRM_basicbacteria"	"basicbacteria"	"Basic Bacteria Model"	6	"In the previous task, you might have been surprised to find that the bacteria growth rate has no impact on the number of bacteria at the final, steady state. This is an indication that even a simple 2-variable model can lead to interesting, and maybe non-intuitive results. 


For a model as simple as the one we have here, one can mathematically compute the steady state, i.e., the state at which bacteria and immune response don't change further. To do so, realize that _no change_ means both left hand sides of the ODE model are zero. Equivalently, for the discrete time model, it means $B_{t+dt} = B_t$ and the same for **I**. We'll focus on the ODE model here. With the right side of the equations being zero, the model turns into just 2 algebraic equations, namely $0= g B (1-B/B_{max}) - d_B B - k BI$ and $0 = r B I - d_I I$. You can now solve this such that you end up with two equations of the form $B = XX$ and $I = YY$ where *XX* and *YY* are some combinations of model parameters. Let's do that for the second equation. 


We rewrite the equation as $r B I = d_I I$, then divide by **I** and *r* to arrive at $B = d_I/r$. This shows that indeed, the number of bacteria at the steady state does not depend on the growth rate *g*. I'll let you do the same for the first equation to get **I** at steady state (note that at some poin in the solving process, you'll have to insert the steady state value of **B** we just found into the equation). You should end up with $I = (r B_{max} (g-d_B) - d_I g)/(k r B_{max})$. Based on this, we expect that doubling *d~I~* will lead to an increase (doubling) in $B$ at steady state, and a decrease in **I**. Let's test that. 


Set everything back as in task 1 (you can use the _Reset Inputs_ button), but increase the simulation time to 200 days (to ensure we reach steady state). Run the model. Record **B** and **I** at the end. Then set $d_I=3$, run again, and again record values for **B** and **I**. Do it again for $d_I=4$."	"T6R3"	"Final value for **B**, continous model, _d~I~_ = 4"	"Rounded_Integer"	"Report the rounded integer"
"DSAIRM_basicbacteria"	"basicbacteria"	"Basic Bacteria Model"	6	"In the previous task, you might have been surprised to find that the bacteria growth rate has no impact on the number of bacteria at the final, steady state. This is an indication that even a simple 2-variable model can lead to interesting, and maybe non-intuitive results. 


For a model as simple as the one we have here, one can mathematically compute the steady state, i.e., the state at which bacteria and immune response don't change further. To do so, realize that _no change_ means both left hand sides of the ODE model are zero. Equivalently, for the discrete time model, it means $B_{t+dt} = B_t$ and the same for **I**. We'll focus on the ODE model here. With the right side of the equations being zero, the model turns into just 2 algebraic equations, namely $0= g B (1-B/B_{max}) - d_B B - k BI$ and $0 = r B I - d_I I$. You can now solve this such that you end up with two equations of the form $B = XX$ and $I = YY$ where *XX* and *YY* are some combinations of model parameters. Let's do that for the second equation. 


We rewrite the equation as $r B I = d_I I$, then divide by **I** and *r* to arrive at $B = d_I/r$. This shows that indeed, the number of bacteria at the steady state does not depend on the growth rate *g*. I'll let you do the same for the first equation to get **I** at steady state (note that at some poin in the solving process, you'll have to insert the steady state value of **B** we just found into the equation). You should end up with $I = (r B_{max} (g-d_B) - d_I g)/(k r B_{max})$. Based on this, we expect that doubling *d~I~* will lead to an increase (doubling) in $B$ at steady state, and a decrease in **I**. Let's test that. 


Set everything back as in task 1 (you can use the _Reset Inputs_ button), but increase the simulation time to 200 days (to ensure we reach steady state). Run the model. Record **B** and **I** at the end. Then set $d_I=3$, run again, and again record values for **B** and **I**. Do it again for $d_I=4$."	"T6R4"	"Final value for **I**, continous model, _d~I~_ = 2"	"Rounded_Integer"	"Report the rounded integer"
"DSAIRM_basicbacteria"	"basicbacteria"	"Basic Bacteria Model"	6	"In the previous task, you might have been surprised to find that the bacteria growth rate has no impact on the number of bacteria at the final, steady state. This is an indication that even a simple 2-variable model can lead to interesting, and maybe non-intuitive results. 


For a model as simple as the one we have here, one can mathematically compute the steady state, i.e., the state at which bacteria and immune response don't change further. To do so, realize that _no change_ means both left hand sides of the ODE model are zero. Equivalently, for the discrete time model, it means $B_{t+dt} = B_t$ and the same for **I**. We'll focus on the ODE model here. With the right side of the equations being zero, the model turns into just 2 algebraic equations, namely $0= g B (1-B/B_{max}) - d_B B - k BI$ and $0 = r B I - d_I I$. You can now solve this such that you end up with two equations of the form $B = XX$ and $I = YY$ where *XX* and *YY* are some combinations of model parameters. Let's do that for the second equation. 


We rewrite the equation as $r B I = d_I I$, then divide by **I** and *r* to arrive at $B = d_I/r$. This shows that indeed, the number of bacteria at the steady state does not depend on the growth rate *g*. I'll let you do the same for the first equation to get **I** at steady state (note that at some poin in the solving process, you'll have to insert the steady state value of **B** we just found into the equation). You should end up with $I = (r B_{max} (g-d_B) - d_I g)/(k r B_{max})$. Based on this, we expect that doubling *d~I~* will lead to an increase (doubling) in $B$ at steady state, and a decrease in **I**. Let's test that. 


Set everything back as in task 1 (you can use the _Reset Inputs_ button), but increase the simulation time to 200 days (to ensure we reach steady state). Run the model. Record **B** and **I** at the end. Then set $d_I=3$, run again, and again record values for **B** and **I**. Do it again for $d_I=4$."	"T6R5"	"Final value for **I**, continous model, _d~I~_ = 3"	"Rounded_Integer"	"Report the rounded integer"
"DSAIRM_basicbacteria"	"basicbacteria"	"Basic Bacteria Model"	6	"In the previous task, you might have been surprised to find that the bacteria growth rate has no impact on the number of bacteria at the final, steady state. This is an indication that even a simple 2-variable model can lead to interesting, and maybe non-intuitive results. 


For a model as simple as the one we have here, one can mathematically compute the steady state, i.e., the state at which bacteria and immune response don't change further. To do so, realize that _no change_ means both left hand sides of the ODE model are zero. Equivalently, for the discrete time model, it means $B_{t+dt} = B_t$ and the same for **I**. We'll focus on the ODE model here. With the right side of the equations being zero, the model turns into just 2 algebraic equations, namely $0= g B (1-B/B_{max}) - d_B B - k BI$ and $0 = r B I - d_I I$. You can now solve this such that you end up with two equations of the form $B = XX$ and $I = YY$ where *XX* and *YY* are some combinations of model parameters. Let's do that for the second equation. 


We rewrite the equation as $r B I = d_I I$, then divide by **I** and *r* to arrive at $B = d_I/r$. This shows that indeed, the number of bacteria at the steady state does not depend on the growth rate *g*. I'll let you do the same for the first equation to get **I** at steady state (note that at some poin in the solving process, you'll have to insert the steady state value of **B** we just found into the equation). You should end up with $I = (r B_{max} (g-d_B) - d_I g)/(k r B_{max})$. Based on this, we expect that doubling *d~I~* will lead to an increase (doubling) in $B$ at steady state, and a decrease in **I**. Let's test that. 


Set everything back as in task 1 (you can use the _Reset Inputs_ button), but increase the simulation time to 200 days (to ensure we reach steady state). Run the model. Record **B** and **I** at the end. Then set $d_I=3$, run again, and again record values for **B** and **I**. Do it again for $d_I=4$."	"T6R6"	"Final value for **I**, continous model, _d~I~_ = 4"	"Rounded_Integer"	"Report the rounded integer"
"DSAIRM_basicbacteria"	"basicbacteria"	"Basic Bacteria Model"	7	"Again, set everything back as in task 1 (you can use the _Reset Inputs_ button). Set the y-axis to log for the plot. Change immune response decay rate, _d~I~_, to 0.2. You should get a plot where both immune response and bacteria numbers drop below 1 and take on fractional values. Contemplate what that means. If not clear, re-read the bullet points at the start of this page. This is one of the draw-backs of ODE based models, and we'll revisit this topic in the stochastic apps."	"T7R1"	"Minimum value of **B** (report as X.YZ)"	"Numeric"	"Round to two significant digits, report as non-scientic notation (as X.YZ)"
"DSAIRM_basicbacteria"	"basicbacteria"	"Basic Bacteria Model"	7	"Again, set everything back as in task 1 (you can use the _Reset Inputs_ button). Set the y-axis to log for the plot. Change immune response decay rate, _d~I~_, to 0.2. You should get a plot where both immune response and bacteria numbers drop below 1 and take on fractional values. Contemplate what that means. If not clear, re-read the bullet points at the start of this page. This is one of the draw-backs of ODE based models, and we'll revisit this topic in the stochastic apps."	"T7R2"	"Minimum value of **I** (report as X.YZ)"	"Numeric"	"Round to two significant digits, report as non-scientic notation (as X.YZ)"
"DSAIRM_basicbacteria"	"basicbacteria"	"Basic Bacteria Model"	8	"Go wild! Change any inputs you want to change, see how it affects the results. To start building intuition, it is best to change one quantity at a time. Before you run a simulation with new settings, contemplate what you think might happen. Then see if it does. Always go through an iterative cylce: Think about expectations -> run simulation -> update understanding (__Do Science/Research__)."	"T8R1"	"Nothing"	"None"	""
